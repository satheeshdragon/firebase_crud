{"version":3,"sources":["Firebase.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Show.js","components/ImageUpload.js","components/multi_image_upload.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","storage","settings","timestampsInSnapshots","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","snippet","forEach","doc","_doc$data","data","snippet_name","snippet_description","image_url","push","key","id","setState","onCollectionUpdate_upload","querySnapshotupload","upload","_doc$data2","folder_name","console","log","state","ref","firestore","collection","ref_upload","unsubscribe","unsubscribe_upload","onSnapshot","_this2","delete","then","history","catch","error","match","params","get","exists","_this3","react_default","a","createElement","class","Link","to","map","concat","onClick","bind","Component","Boolean","window","location","hostname","Edit","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","set","docRef","for","type","placeholder","Create","handleChange","files","image","add","url","progress","_this$state2","cols","rows","Show","isLoading","ImageUpload","handleUpload","i","length","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","assertThisInitialized","style","height","display","flexDirection","alignItems","justifyContent","max","multiple","src","alt","width","sni_file_name","replace","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","ReactDOM","render","BrowserRouter","Route","exact","path","component","Imageupload","multiupload","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.710ea010.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\nimport 'firebase/storage';\n\nconst settings = {timestampsInSnapshots: true};\n\nconst config = {\n  apiKey: \"AIzaSyDpNG2sDe3w-Lw39XGXNoNORW3v5kUbcTM\",\n  authDomain: \"reactsample-85097.firebaseapp.com\",\n  databaseURL: \"https://reactsample-85097.firebaseio.com\",\n  projectId: \"reactsample-85097\",\n  storageBucket: \"reactsample-85097.appspot.com\"\n};\nfirebase.initializeApp(config);\nconst storage = firebase.storage();\n\nfirebase.firestore().settings(settings);\n\nexport {\n    storage, firebase as default\n}\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport firebase from './Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('snippet');\n    this.ref_upload = firebase.firestore().collection('files');\n    this.unsubscribe = null;\n    this.unsubscribe_upload = null;\n    this.state = {\n      snippet: [],\n      upload:[],\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const snippet = [];\n\n    querySnapshot.forEach((doc) => {\n      const { snippet_name, snippet_description, image_url } = doc.data();\n      snippet.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        snippet_name,\n        snippet_description,\n        image_url,\n      });\n    });\n\n    this.setState({\n      snippet\n   });\n  }\n\n    onCollectionUpdate_upload = (querySnapshotupload) => {\n    const upload = [];\n    \n    querySnapshotupload.forEach((doc) => {\n      const { folder_name, snippet_name } = doc.data();\n      upload.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        folder_name,\n        snippet_name,\n      });\n    });\n\n    console.log(upload);\n    \n\n    this.setState({\n      upload\n   });\n\n    console.log(this.state);\n\n\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    this.unsubscribe_upload = this.ref_upload.onSnapshot(this.onCollectionUpdate_upload);\n  }\n\n  delete(id){\n    firebase.firestore().collection('snippet').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\")\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  view(id){\n      const ref = firebase.firestore().collection('snippet').doc(this.props.match.params.id);\n      ref.get().then((doc) => {\n        if (doc.exists) {\n          const snippet = doc.data();\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title text-center\">\n              BOARD LIST\n            </h3>\n          </div>\n          <div class=\"panel-body text-center\">\n            <h4>\n            <Link to=\"/create\" class=\"btn btn-primary\">Add Board</Link> &nbsp;\n            </h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>File.Set.name</th>\n                  <th>Folder.name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.snippet.map(snippet =>\n                  <tr>\n                    <td>{snippet.snippet_name}</td>\n                    <td>{snippet.snippet_description}</td>\n                    <td>\n                      <Link to={`/edit/${snippet.key}`} class=\"btn btn-primary\">Edit </Link> &nbsp;\n                      <button onClick={this.delete.bind(this, snippet.key)} class=\"btn btn-danger\">Delete</button> &nbsp;\n                      <button onClick=\"\" class=\"btn btn-info\">View</button>\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title text-center\">\n              Upload Datas\n            </h3>\n          </div>\n          <div class=\"panel-body text-center\">\n            <h4>\n            <Link to=\"/mulimage\" class=\"btn btn-primary\">File Upload</Link>\n            </h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Snippet.Name</th>\n                  <th>Snippet.Description</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.upload.map(upload =>\n                  <tr>\n                    <td>{upload.snippet_name}</td>\n                    <td>{upload.folder_name}</td>\n                    <td>\n                      <Link to={`/edit/${upload.key}`} class=\"btn btn-primary\">Edit </Link> &nbsp;\n                      <button onClick={this.delete.bind(this, upload.key)} class=\"btn btn-danger\">Delete</button> &nbsp;\n                      <button onClick={this.delete.bind(this, upload.key)} class=\"btn btn-info\">View</button>\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      snippet_name: '',\n      snippet_description: '',\n      image_url: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('snippet').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        const snippet = doc.data();\n        this.setState({\n          key: doc.id,\n          snippet_name: snippet.snippet_name,\n          snippet_description: snippet.snippet_description,\n          image_url: snippet.image_url\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState({snippet:state});\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { snippet_name, snippet_description, image_url } = this.state;\n\n    const updateRef = firebase.firestore().collection('snippet').doc(this.state.key);\n    updateRef.set({\n      snippet_name,\n      snippet_description,\n      image_url\n    }).then((docRef) => {\n      this.setState({\n        key: '',\n        snippet_name: '',\n        snippet_description: '',\n        image_url: ''\n      });\n      this.props.history.push(\"/show/\"+this.props.match.params.id)\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title text-center\">\n              EDIT snippet\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4 class=\"text-center\"><Link to={`/`} class=\"btn btn-primary\">Board List</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Title:</label>\n                <input type=\"text\" class=\"form-control\" name=\"snippet_name\" value={this.state.snippet_name} onChange={this.onChange} placeholder=\"Title\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Description:</label>\n                <input type=\"text\" class=\"form-control\" name=\"snippet_description\" value={this.state.snippet_description} onChange={this.onChange} placeholder=\"Description\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Author:</label>\n                <input type=\"text\" class=\"form-control\" name=\"image_url\" value={this.state.image_url} onChange={this.onChange} placeholder=\"Author\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport {storage} from '../Firebase';\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.ref = firebase.firestore().collection('snippet');\n    this.state = {\n      snippet_name: '',\n      snippet_description: '',\n      image_url: '',\n      image: null,\n      url: '',\n      progress: 0,\n      files:'',\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      let image = [];\n      image = e.target.files;\n      this.setState(() => ({image}));\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    // console.log(this.state);\n    // console.log(this.state.image);\n    // console.log(this.state.image[0].name);\n    // const {image} = this.state;\n    // // console.log(image);\n    // const uploadTask = storage.ref(`images/${this.state.image[0].name}`).put(image);\n\n    // // () => {\n    //     // complete function ....\n    //     storage.ref('images').child(image.name).getDownloadURL().then(url => {\n    //         console.log(url);\n    //         this.setState({url});\n    //     })\n    // // });\n\n    const { snippet_name, snippet_description, image_url } = this.state;\n\n    this.ref.add({\n      snippet_name,\n      snippet_description,\n      image_url\n    }).then((docRef) => {\n      this.setState({\n        snippet_name: '',\n        snippet_description: '',\n        image_url: ''\n      });\n      this.props.history.push(\"/\")\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    const { snippet_name, snippet_description, image_url } = this.state;\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title text-center\">\n              ADD BOARD\n            </h3>\n          </div>\n          <div class=\"panel-body \">\n            <h4 class=\"text-center\"><Link to=\"/\" class=\"btn btn-primary\">Book List</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Snippet Name:</label>\n                <input type=\"text\" class=\"form-control\" name=\"snippet_name\" value={snippet_name} onChange={this.onChange} placeholder=\"Name..\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Snippet Description:</label>\n                <textArea class=\"form-control\" name=\"snippet_description\" onChange={this.onChange} placeholder=\"Description\" cols=\"80\" rows=\"3\">{snippet_description}</textArea>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Snippet Image:</label>\n                <input type=\"text\" class=\"form-control\" name=\"image_url\" value={image_url} onChange={this.onChange} placeholder=\"url...\" />\n              </div>\n                            \n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      snippet: {},\n      key: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('snippet').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        this.setState({\n          snippet: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  delete(id){\n    firebase.firestore().collection('boards').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\")\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading text-center\">\n          <h4 class=\"text-center\"><Link to=\"/\">Board List</Link></h4>\n            <h3 class=\"panel-title\">\n              {this.state.snippet.snippet_name}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <dl>\n              <dt>Description:</dt>\n              <dd>{this.state.snippet.snippet_description}</dd>\n              <dt>Author:</dt>\n              <dd>{this.state.snippet.image_url}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.key}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n            <button onClick={this.delete.bind(this, this.state.key)} class=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;\n","import React, {Component} from 'react';\nimport {storage} from '../Firebase';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    }\n    this.handleChange = this\n      .handleChange\n      .bind(this);\n      this.handleUpload = this.handleUpload.bind(this);\n  }\n  handleChange = e => {\n    if (e.target.files[0]) {\n      let image = [];\n      image = e.target.files;\n      this.setState(() => ({image}));\n    }\n  }\n  handleUpload = () => {\n      const {image} = this.state;\n      console.log(image);\n      for (var i = 0; i >= image.length; i++) {        \n        console.log(image[i]);\n      }\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on('state_changed', \n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({progress});\n      }, \n      (error) => {\n           // error function ....\n        console.log(error);\n      }, \n    () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n            console.log(url);\n            this.setState({url});\n        })\n    });\n  }\n  render() {\n    const style = {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    return (\n      <div style={style}>\n      <progress value={this.state.progress} max=\"100\"/>\n      <br/>\n        <input type=\"file\" onChange={this.handleChange} multiple />\n        <button onClick={this.handleUpload}>Upload</button>\n        <br/>\n        <img src={this.state.url || 'http://via.placeholder.com/400x300'} alt=\"Uploaded images\" height=\"300\" width=\"400\"/>\n      </div>\n    )\n  }\n}\n\nexport default ImageUpload;","import React, {Component} from 'react';\nimport {storage} from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport firebase from '../Firebase';\n\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('files');\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0,\n      files:'',\n      snippet_name: '',\n      folder_name: '',\n    }\n    this.handleChange = this\n      .handleChange\n      .bind(this);\n      this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      let image = [];\n      image = e.target.files;\n      this.setState(() => ({image}));\n    }\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n\n  handleUpload = (e) => {\n    e.preventDefault();\n\n      const {image} = this.state;\n      const { snippet_name } = this.state;\n      \n    // console.log(this.state);\n    // console.log(snippet_name);\n      var sni_file_name = snippet_name.replace(/\\s+/g,\"_\");\n      // console.log(sni_file_name);\n\n      var today = new Date();\n      var dd = today.getDate();\n\n      var mm = today.getMonth()+1; \n      var yyyy = today.getFullYear();\n      if(dd<10) \n      {\n          dd='0'+dd;\n      } \n\n      if(mm<10) \n      {\n          mm='0'+mm;\n      }\n\n      today = dd+'_'+mm+'_'+yyyy+'_'+sni_file_name;\n      console.log(today);\n\n      var folder_name = today;\n      // const { folder_name } = this.state;\n\n\n      this.ref.add({\n      snippet_name,\n      folder_name,\n    }).then((docRef) => {\n      this.setState({\n        snippet_name: '',\n        folder_name: '',\n      });\n      this.props.history.push(\"/mulimage\")\n    });\n\n      // const file_base = [];\n      if(image){\n        for (var i = 0; i < image.length; i++) {        \n\n          // file_base.push(image[i].name);\n          let data = storage.ref(`snippet/file_1_${today}/${image[i].name}`).put(image[i]).on('state_changed', \n        (snapshot) => {\n          // progrss function ....\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n          this.setState({progress});\n        }, \n        (error) => {\n             // error function ....\n          console.log(error);\n        });\n\n        }\n      }\n  }\n\n\n  render() {\n    const style = {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    const { snippet_name } = this.state;\n    return (\n     <div style={style}>\n     <Link to=\"/\" class=\"btn btn-primary\">Board</Link>\n     <h3 class=\"panel-title text-center\">\n              UPLOAD CENTER\n            </h3>\n      <progress value={this.state.progress} max=\"100\"/>\n      <br/>\n        \n        <div class=\"form-group\">\n          <label for=\"title\" class=\"text-center\">Index Name:</label>\n          <input type=\"text\" class=\"form-control\" name=\"snippet_name\" value={snippet_name} onChange={this.onChange} placeholder=\"Name..\" />\n        </div>\n        <div class=\"form-group\">\n            <input class=\"btn btn-info\" type=\"file\" onChange={this.handleChange} multiple />\n        </div>\n\n        <button class=\"btn btn-success\" onClick={this.handleUpload}>Upload</button>\n      </div>\n    )\n  }\n}\n\nexport default ImageUpload;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\nimport Imageupload from './components/ImageUpload';\nimport multiupload from './components/multi_image_upload';\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n        <Route path='/image' component={Imageupload} />\n        <Route path='/mulimage' component={multiupload} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}